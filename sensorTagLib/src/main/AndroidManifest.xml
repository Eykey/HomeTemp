<?xml version="1.0" encoding="utf-8"?>

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="ca.concordia.sensortag"
    android:versionCode="5"
    android:versionName="1.2">

    <!--
     In Android Studio "minSdkVersion value is not used; it is always overridden by the value
   specified in the Gradle build script, so should be removed to avoid ambiguity."

    <uses-sdk
    android:minSdkVersion="18"
    android:targetSdkVersion="19" />
    -->

    <!--
    Needed to give permission to the application to access Bluetooth:
    the BLUETOOTH permission allows the application to establish connections and transfer data,
    while BLUETOOTH_ADMIN allows the application to manipulate Bluetooth settings (e.g. turning
    Bluetooth on) and initiating device discovery.
    -->
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />

    <uses-feature
        android:name="android.hardware.bluetooth_le"
        android:required="true" />
    <uses-feature
        android:name="android.hardware.bluetooth.ble"
        android:required="true" />

    <application
        android:allowBackup="false"
        android:label="@string/app_name">

        <!--
       Service that handles all Bluetooth LE communications with the SensorTag. This comes
       from the SensorTagLib and must be listed in the application's manifest to be available at
       runtime.
       -->
        <service
            android:name="ti.android.ble.common.BluetoothLeService"
            android:enabled="true" />

        <!--
       Activity that is listed in Android's Applications drawer. You can have
       multiple Activities defined like this, which will make multiple icons in Android's
       Application drawer.
       -->
        <activity
            android:name="DeviceSelectActivity"
            android:label="@string/app_name"
            android:screenOrientation="portrait">

            <!--
            The Intent Filter tells Android which "signals" from other applications can call
            your application. For example, Gmail would want to get a signal when the user clicks an
            email message, so that Gmail can open a New Message window. In this case, we only care
            about the user clicking the application on the Home Screen or Application drawer.
            -->

            <!--<intent-filter>
                &lt;!&ndash; Allows this Activity to launch when the application is launched. &ndash;&gt;
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.DEFAULT" />
                &lt;!&ndash; Show this Activity's icon in the Launcher (Home Screen/Application drawer). &ndash;&gt;
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>-->


        </activity>

    </application>

</manifest>